# Netflix PDF Analyzer - Git Ignore File

# Environment Variables (keep .env as template, ignore actual config)
.env.local
.env.development.local
.env.test.local
.env.production.local

# API Keys and Secrets
*.key
*.pem
*.p12
config/secrets.json

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual Environment
backend/netflix_ai_env/
venv/
env/
ENV/
env.bak/
venv.bak/

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# Pyenv
.python-version

# Pipenv
Pipfile.lock

# PEP 582
__pypackages__/

# Celery
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Node.js
frontend/node_modules/
frontend/npm-debug.log*
frontend/yarn-debug.log*
frontend/yarn-error.log*
frontend/lerna-debug.log*
frontend/.pnpm-debug.log*

# Diagnostic reports
frontend/report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
frontend/pids
frontend/*.pid
frontend/*.seed
frontend/*.pid.lock

# Coverage directory used by tools like istanbul
frontend/coverage/
frontend/*.lcov

# nyc test coverage
frontend/.nyc_output

# Grunt intermediate storage
frontend/.grunt

# Bower dependency directory
frontend/bower_components

# node-waf configuration
frontend/.lock-wscript

# Compiled binary addons
frontend/build/Release

# Dependency directories
frontend/jspm_packages/

# Snowpack dependency directory
frontend/web_modules/

# TypeScript cache
frontend/*.tsbuildinfo

# Optional npm cache directory
frontend/.npm

# Optional eslint cache
frontend/.eslintcache

# Microbundle cache
frontend/.rpt2_cache/
frontend/.rts2_cache_cjs/
frontend/.rts2_cache_es/
frontend/.rts2_cache_umd/

# Optional REPL history
frontend/.node_repl_history

# Output of 'npm pack'
frontend/*.tgz

# Yarn Integrity file
frontend/.yarn-integrity

# parcel-bundler cache
frontend/.cache
frontend/.parcel-cache

# Next.js build output
frontend/.next
frontend/out

# Nuxt.js build / generate output
frontend/.nuxt
frontend/dist

# Gatsby files
frontend/.cache/
frontend/public

# Vite
frontend/dist/
frontend/dist-ssr/
frontend/*.local

# Rollup.js default build output
frontend/dist/

# Svelte
frontend/.svelte-kit

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# IDEs and Editors
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.tmp
*.temp
Desktop.ini

# Logs
*.log
logs/
backend/logs/
frontend/logs/

# Cache files
*.cache
.cache/
backend/lightning_cache.json
backend/*.cache
frontend/.cache/

# Temporary files
tmp/
temp/
*.tmp
*.temp

# Database files
*.db
*.sqlite
*.sqlite3

# Backup files
*.bak
*.backup
*~

# Data files (uncomment if you don't want to track large data files)
# *.pdf
# *.csv
# *.json
# data/

# Model files (uncomment if you have large model files)
# *.model
# *.pkl
# *.h5
# *.pb

# Output and result directories
output/
results/
reports/

# Local configuration files
local_config.json
local_settings.py

# Test files and directories
test_output/
test_results/
.pytest_cache/

# Documentation build
docs/_build/
docs/build/

# Flask instance folder
instance/

# Scrapy stuff
.scrapy

# PyBuilder
target/

# IPython Notebook
.ipynb_checkpoints

# Pyenv
.python-version

# Conda
.conda/

# Local development tools
.devcontainer/
docker-compose.override.yml

# Deployment
.vercel
.netlify
.railway

# Environment-specific
development/
staging/
production/
